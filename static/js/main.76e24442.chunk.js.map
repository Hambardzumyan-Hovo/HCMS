{"version":3,"sources":["components/Cashflow/CashflowStyle.js","components/Totals/Totals.jsx","components/Cashflow/Submit/SubmitClear.jsx","components/Cashflow/Cashflow.jsx","components/SecondPage/secondPageStyle.js","components/SecondPage/Check-in/CheckIn.jsx","components/SecondPage/Products/Products.jsx","components/SecondPage/Check-out/CheckOut.jsx","components/SecondPage/SecondPage.jsx","components/Shift/ShiftStyle.js","components/Shift/Shift.jsx","App.js","index.js","components/Totals/Totals.module.css"],"names":["useStyles","makeStyles","table","minWidth","maxWidth","margin","disableStyle","backgroundColor","alert","borderColor","boxShadow","animation","cash","pos","comment","width","submitAndClear","root","padding","buttonContainer","display","justifyContent","marginTop","marginBottom","buttonLeft","position","left","buttonRight","right","BootstrapInput","withStyles","theme","spacing","input","borderRadius","palette","background","paper","border","fontSize","transition","transitions","create","fontFamily","join","InputBase","Totals","localValues","incomeValues","expValues","cashValues","posValues","map","lv","push","Number","Expense","Income","Type","sum","reduce","total","current","exp","className","styles","totals","SubmitClear","classes","JSON","parse","localStorage","getItem","localCheckin","localProducts","localCheckout","Button","variant","color","onClick","workbook","XLSX","utils","book_new","worksheet","json_to_sheet","worksheet_2","worksheet_3","worksheet_4","book_append_sheet","writeFile","window","confirm","clear","location","reload","Cashflow","initValues","useState","titles","state","setstate","rows","setRows","handleValueChange","rowIndex","title","e","persist","target","value","setItem","stringify","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","t","TableCell","key","TableBody","row","index","id","NativeSelect","defaultValue","onChange","TextField","type","rownumber","disabled","Comment","newRow","pop","length","guestAndSource","even","CheckIn","DateFnsUtils","DatePicker","autoOk","format","inputVariant","placeholder","pickedDate","toLocaleDateString","handleDateChange","Guest","Room","Pers","Debt","Source","Products","CheckOut","SecondPage","to","Shift","props","shift","handleBlur","name","noValidate","autoComplete","s","label","toString","onBlur","App","initCheckinValues","initProductValues","Price","Comments","initCheckoutValues","exact","path","render","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.76e24442.chunk.js","sourcesContent":["import { InputBase, withStyles } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n    maxWidth: 1200,\r\n    margin: \"auto\",\r\n  },\r\n  disableStyle: { backgroundColor: \"grey\" },\r\n\r\n  alert: {\r\n    borderColor: \"#D13535\",\r\n    boxShadow: \"0px 0px 5px 2px #D13535\",\r\n    animation: \"pulse 1.25s infinite cubic-bezier(0.66, 0, 0, 1)\",\r\n  },\r\n  cash: {\r\n    borderColor: \"#21CD48\",\r\n    boxShadow: \"0px 0px 5px 2px #219948\",\r\n  },\r\n  pos: {\r\n    borderColor: \"#2CA9C4\",\r\n    boxShadow: \"0px 0px 5px 2px #2CC9D2\",\r\n  },\r\n  comment: {\r\n    width: 600,\r\n  },\r\n  submitAndClear: { margin: 20 },\r\n  root: { padding: 0 },\r\n  buttonContainer: { display: \"flex\", justifyContent: \"center\", marginTop: 35, marginBottom: 35 },\r\n  buttonLeft: { margin: \"auto\", position: \"absolute\", left: 0 },\r\n  buttonRight: { margin: \"auto\", position: \"absolute\", right: 0 },\r\n});\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\nexport default BootstrapInput;\r\n","import React from \"react\";\r\nimport styles from \"./Totals.module.css\";\r\n\r\nconst Totals = ({ localValues }) => {\r\n  let [incomeValues, expValues, cashValues, posValues] = [[0], [0], [0], [0]];\r\n\r\n  localValues.map(lv => expValues.push(Number(lv.Expense)));\r\n  localValues.map(lv => incomeValues.push(Number(lv.Income)));\r\n  localValues.map(lv => lv.Type === \"Cash\" && cashValues.push(Number(lv.Income)));\r\n  localValues.map(lv => lv.Type === \"Credit Card\" && posValues.push(Number(lv.Income)));\r\n\r\n  const sum = incomeValues.reduce((total, current) => {\r\n    return total + current;\r\n  });\r\n  const exp = expValues.reduce((total, current) => {\r\n    return total + current;\r\n  });\r\n  const cash = cashValues.reduce((total, current) => {\r\n    return total + current;\r\n  });\r\n  const pos = posValues.reduce((total, current) => {\r\n    return total + current;\r\n  });\r\n\r\n  return (\r\n    <div className={styles.totals}>\r\n      <p>Total Income: {sum}</p>\r\n      <p>Cash: {cash}</p>\r\n      <p>Credit Card: {pos}</p>\r\n      <hr />\r\n      <p>Total Expenses: {exp}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Totals;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport XLSX from \"xlsx\";\r\nimport { useStyles } from \"../CashflowStyle\";\r\n\r\nconst SubmitClear = () => {\r\n  const classes = useStyles();\r\n  let localValues = JSON.parse(localStorage.getItem(\"local\"));\r\n  let localCheckin = JSON.parse(localStorage.getItem(\"localCheckin\"));\r\n  let localProducts = JSON.parse(localStorage.getItem(\"localProducts\"));\r\n  let localCheckout = JSON.parse(localStorage.getItem(\"localCheckout\"));\r\n\r\n  const handleClear = () =>\r\n    window.confirm(\"Your are about to start a new shift! Are you sure?\")\r\n      ? localStorage.clear(window.location.reload())\r\n      : null;\r\n\r\n  const handleSubmit = () => {\r\n    let ws_name = \"Cashflow\";\r\n    let ws2_name = \"Checkins\";\r\n    let ws3_name = \"Products\";\r\n    let ws4_name = \"Checkouts\";\r\n    let filename = \"cashflow.xlsx\";\r\n    let workbook = XLSX.utils.book_new();\r\n    let worksheet = XLSX.utils.json_to_sheet(localValues);\r\n    let worksheet_2 = XLSX.utils.json_to_sheet(localCheckin);\r\n    let worksheet_3 = XLSX.utils.json_to_sheet(localProducts);\r\n    let worksheet_4 = XLSX.utils.json_to_sheet(localCheckout);\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, ws_name);\r\n    XLSX.utils.book_append_sheet(workbook, worksheet_2, ws2_name);\r\n    XLSX.utils.book_append_sheet(workbook, worksheet_3, ws3_name);\r\n    XLSX.utils.book_append_sheet(workbook, worksheet_4, ws4_name);\r\n    XLSX.writeFile(workbook, filename);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant='contained' color='primary' onClick={handleSubmit} className={classes.submitAndClear}>\r\n        Submit\r\n      </Button>\r\n      <Button variant='contained' color='secondary' onClick={handleClear} className={classes.submitAndClear}>\r\n        New Shift\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitClear;\r\n","import React, { useState } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { TextField, NativeSelect, Button } from \"@material-ui/core\";\r\nimport BootstrapInput from \"./CashflowStyle\";\r\nimport { useStyles } from \"./CashflowStyle\";\r\nimport Totals from \"../Totals/Totals\";\r\nimport SubmitClear from \"./Submit/SubmitClear\";\r\n\r\nconst Cashflow = ({ localValues, initValues }) => {\r\n  const classes = useStyles();\r\n  const [titles] = useState([\"Income\", \"Expense\", \"Type\", \"Comment\"]);\r\n  const [state, setstate] = useState(localValues);\r\n  const [rows, setRows] = useState([1, 2, 3, 4, 5]);\r\n\r\n  const handleAddLine = () => {\r\n    localValues.push({ Income: \"\", Expense: \"\", Type: \"\", Comment: \"\" });\r\n    localStorage.setItem(\"local\", JSON.stringify(localValues));\r\n    setstate(() => {\r\n      let newState = [...localValues];\r\n      return newState;\r\n    });\r\n    const newRow = [...rows, rows.pop() + 1];\r\n    setRows(newRow);\r\n  };\r\n\r\n  const handleRemoveLine = () => {\r\n    if (localValues.length > 5) {\r\n      localValues.pop();\r\n      localStorage.setItem(\"local\", JSON.stringify(localValues));\r\n      setstate(() => {\r\n        let newState = [...localValues];\r\n        return newState;\r\n      });\r\n      rows.pop();\r\n      const newRow = [...rows];\r\n      setRows(newRow);\r\n    }\r\n  };\r\n\r\n  const handleValueChange = (rowIndex, title, e) => {\r\n    e.persist();\r\n    localValues[rowIndex][title] = e.target.value;\r\n    localStorage.setItem(\"local\", JSON.stringify(localValues));\r\n    setstate(() => {\r\n      let newState = [...localValues];\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label='simple table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              {titles.map(t => {\r\n                return (\r\n                  <TableCell key={t}>\r\n                    <h2>{t}</h2>\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {localValues.map((row, rowIndex) => (\r\n              <TableRow key={rowIndex}>\r\n                {titles.map((title, index) => {\r\n                  return (\r\n                    <TableCell key={title} id={rows[rowIndex]} className={classes.root}>\r\n                      {index === 2 ? (\r\n                        <NativeSelect\r\n                          className={\r\n                            (state[rowIndex][\"Expense\"] !== \"\" && state[rowIndex][\"Type\"] === \"\") ||\r\n                            (state[rowIndex][\"Income\"] !== \"\" && state[rowIndex][\"Type\"] === \"\")\r\n                              ? classes.alert\r\n                              : \"\"\r\n                          }\r\n                          input={<BootstrapInput defaultValue={localValues[rowIndex][title]} />}\r\n                          onChange={e => handleValueChange(rowIndex, title, e)}>\r\n                          <option aria-label='None' value=''></option>\r\n                          <option value={\"Cash\"}>Cash</option>\r\n                          <option value={\"Credit Card\"}>Credit Card</option>\r\n                        </NativeSelect>\r\n                      ) : (\r\n                        <TextField\r\n                          type={title === \"Income\" || title === \"Expense\" ? \"number\" : \"text\"}\r\n                          className={\r\n                            (title === \"Income\" && state[rowIndex][\"Expense\"] !== \"\") ||\r\n                            (title === \"Expense\" && state[rowIndex][\"Income\"] !== \"\")\r\n                              ? classes.disableStyle\r\n                              : \"\" + title === \"Income\" && state[rowIndex][\"Type\"] === \"Cash\"\r\n                              ? classes.cash\r\n                              : \"\" + title === \"Income\" && state[rowIndex][\"Type\"] === \"Credit Card\"\r\n                              ? classes.pos\r\n                              : \"\" + title === \"Comment\"\r\n                              ? classes.comment\r\n                              : \"\"\r\n                          }\r\n                          key={title}\r\n                          rownumber={rows[rowIndex]}\r\n                          variant='outlined'\r\n                          value={state[rowIndex][title]}\r\n                          disabled={\r\n                            (title === \"Income\" && state[rowIndex][\"Expense\"] !== \"\") ||\r\n                            (title === \"Expense\" && state[rowIndex][\"Income\"] !== \"\")\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          onChange={e => {\r\n                            handleValueChange(rowIndex, title, e);\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <div className={classes.buttonContainer}>\r\n          <Button className={classes.buttonLeft} variant='contained' color='primary' onClick={handleAddLine}>\r\n            Add Line\r\n          </Button>\r\n          <Button className={classes.buttonRight} variant='contained' color='secondary' onClick={handleRemoveLine}>\r\n            Remove Line\r\n          </Button>\r\n        </div>\r\n      </TableContainer>\r\n      <Totals localValues={localValues} initValues={initValues} />\r\n      <SubmitClear />\r\n    </div>\r\n  );\r\n};\r\nexport default Cashflow;\r\n","import { InputBase, withStyles } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n    maxWidth: 1200,\r\n    margin: \"auto\",\r\n  },\r\n\r\n  guestAndSource: {\r\n    width: 320,\r\n  },\r\n\r\n  even: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  root: { padding: 0 },\r\n  buttonContainer: { display: \"flex\", justifyContent: \"center\", marginTop: 35, marginBottom: 35 },\r\n  buttonLeft: { margin: \"auto\", position: \"absolute\", left: 0 },\r\n  buttonRight: { margin: \"auto\", position: \"absolute\", right: 0 },\r\n});\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"10px 26px 10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\nexport default BootstrapInput;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  TableBody,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport DateFnsUtils from \"@date-io/date-fns\"; // choose your lib\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n\r\nimport { useStyles } from \"../secondPageStyle\";\r\n\r\nconst CheckIn = ({ localCheckin }) => {\r\n  const classes = useStyles();\r\n  const [titles] = useState([\"Guest\", \"Room\", \"Check-In\", \"Check-Out\", \"Pers\", \"Debt\", \"Source\"]);\r\n  const [state, setstate] = useState(localCheckin);\r\n  const [rows, setRows] = useState([1, 2, 3, 4, 5]);\r\n\r\n  const handleDateChange = (e, rowIndex, title) => {\r\n    let pickedDate = e.toLocaleDateString();\r\n    localCheckin[rowIndex][title] = pickedDate;\r\n    localStorage.setItem(\"localCheckin\", JSON.stringify(localCheckin));\r\n    setstate(() => {\r\n      let newState = [...localCheckin];\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  const handleValueChange = (rowIndex, title, e) => {\r\n    e.persist();\r\n    localCheckin[rowIndex][title] = e.target.value;\r\n    localStorage.setItem(\"localCheckin\", JSON.stringify(localCheckin));\r\n    setstate(() => {\r\n      let newState = [...localCheckin];\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  const handleAddLine = () => {\r\n    localCheckin.push({ Guest: \"\", Room: \"\", \"Check-In\": null, \"Check-Out\": null, Pers: \"\", Debt: \"\", Source: \"\" });\r\n    localStorage.setItem(\"localCheckin\", JSON.stringify(localCheckin));\r\n    setstate(() => {\r\n      let newState = [...localCheckin];\r\n      return newState;\r\n    });\r\n    const newRow = [...rows, rows.pop() + 1];\r\n    setRows(newRow);\r\n  };\r\n\r\n  const handleRemoveLine = () => {\r\n    if (localCheckin.length > 5) {\r\n      localCheckin.pop();\r\n      localStorage.setItem(\"localCheckin\", JSON.stringify(localCheckin));\r\n      setstate(() => {\r\n        let newState = [...localCheckin];\r\n        return newState;\r\n      });\r\n      rows.pop();\r\n      const newRow = [...rows];\r\n      setRows(newRow);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <h2>Check-ins</h2>\r\n      <Table className={classes.table} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            {titles.map(t => {\r\n              return (\r\n                <TableCell key={t}>\r\n                  <h3>{t}</h3>\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {localCheckin &&\r\n            localCheckin.map((row, rowIndex) => (\r\n              <TableRow key={rowIndex}>\r\n                {titles.map((title, index) => {\r\n                  return (\r\n                    <TableCell key={title} id={rows[rowIndex]} className={classes.root}>\r\n                      {index === 2 || index === 3 ? (\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <DatePicker\r\n                            autoOk\r\n                            format='dd/MM/yyyy'\r\n                            inputVariant='outlined'\r\n                            variant='inline'\r\n                            placeholder='Choose Date'\r\n                            value={state[rowIndex][title]}\r\n                            onChange={e => handleDateChange(e, rowIndex, title)}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      ) : (\r\n                        <TextField\r\n                          type={title === \"Room\" || title === \"Pers\" || title === \"Debt\" ? \"number\" : \"text\"}\r\n                          key={title}\r\n                          rownumber={rows[rowIndex]}\r\n                          variant='outlined'\r\n                          value={state[rowIndex][title]}\r\n                          className={title === \"Guest\" || title === \"Source\" ? classes.guestAndSource : \"\"}\r\n                          onChange={e => {\r\n                            handleValueChange(rowIndex, title, e);\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.buttonContainer}>\r\n        <Button className={classes.buttonLeft} variant='contained' color='primary' onClick={handleAddLine}>\r\n          Add Line\r\n        </Button>\r\n        <Button className={classes.buttonRight} variant='contained' color='secondary' onClick={handleRemoveLine}>\r\n          Remove Line\r\n        </Button>\r\n      </div>\r\n      <hr />\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default CheckIn;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  TableBody,\r\n  TextField,\r\n  NativeSelect,\r\n} from \"@material-ui/core\";\r\n\r\nimport BootstrapInput, { useStyles } from \"../secondPageStyle\";\r\n\r\nconst Products = ({ localProducts }) => {\r\n  const classes = useStyles();\r\n  const [titles] = useState([\"Type\", \"Room\", \"Guest\", \"Price\", \"Comments\"]);\r\n  const [rows, setRows] = useState([1, 2, 3, 4, 5]);\r\n  const [state, setstate] = useState(localProducts);\r\n\r\n  const handleValueChange = (rowIndex, title, e) => {\r\n    e.persist();\r\n    localProducts[rowIndex][title] = e.target.value;\r\n    localStorage.setItem(\"localProducts\", JSON.stringify(localProducts));\r\n    setstate(() => {\r\n      let newState = [...localProducts];\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  const handleAddLine = () => {\r\n    localProducts.push({ Guest: \"\", Room: \"\", \"Check-In\": null, \"Check-Out\": null, Pers: \"\", Debt: \"\", Source: \"\" });\r\n    localStorage.setItem(\"localProducts\", JSON.stringify(localProducts));\r\n    setstate(() => {\r\n      let newState = [...localProducts];\r\n      return newState;\r\n    });\r\n    const newRow = [...rows, rows.pop() + 1];\r\n    setRows(newRow);\r\n  };\r\n\r\n  const handleRemoveLine = () => {\r\n    if (localProducts.length > 5) {\r\n      localProducts.pop();\r\n      localStorage.setItem(\"localProducts\", JSON.stringify(localProducts));\r\n      setstate(() => {\r\n        let newState = [...localProducts];\r\n        return newState;\r\n      });\r\n      rows.pop();\r\n      const newRow = [...rows];\r\n      setRows(newRow);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <h2>Products</h2>\r\n      <Table className={classes.table} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            {titles.map(t => {\r\n              return (\r\n                <TableCell key={t}>\r\n                  <h3>{t}</h3>\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {localProducts &&\r\n            localProducts.map((row, rowIndex) => (\r\n              <TableRow key={rowIndex}>\r\n                {titles.map((title, index) => {\r\n                  return (\r\n                    <TableCell key={title} id={rows[rowIndex]} className={classes.root}>\r\n                      {index === 0 ? (\r\n                        <NativeSelect\r\n                          input={<BootstrapInput defaultValue={localProducts[rowIndex][title]} />}\r\n                          onChange={e => handleValueChange(rowIndex, title, e)}>\r\n                          <option aria-label='None' value=''></option>\r\n                          <option value={\"Tour\"}>Tour</option>\r\n                          <option value={\"Minibar\"}>Minibar</option>\r\n                          <option value={\"Transfer\"}>Transfer</option>\r\n                          <option value={\"Souvenir\"}>Souvenir</option>\r\n                          <option value={\"Penalty\"}>Penalty</option>\r\n                        </NativeSelect>\r\n                      ) : (\r\n                        <TextField\r\n                          className={title === \"Guest\" || title === \"Comments\" ? classes.guestAndSource : \"\"}\r\n                          key={title}\r\n                          rownumber={rows[rowIndex]}\r\n                          variant='outlined'\r\n                          value={state[rowIndex][title]}\r\n                          onChange={e => {\r\n                            handleValueChange(rowIndex, title, e);\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.buttonContainer}>\r\n        <Button className={classes.buttonLeft} variant='contained' color='primary' onClick={handleAddLine}>\r\n          Add Line\r\n        </Button>\r\n        <Button className={classes.buttonRight} variant='contained' color='secondary' onClick={handleRemoveLine}>\r\n          Remove Line\r\n        </Button>\r\n      </div>\r\n      <hr />\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  TableBody,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useStyles } from \"../secondPageStyle\";\r\nconst CheckOut = ({ localCheckout }) => {\r\n  const classes = useStyles();\r\n  const [titles] = useState([\"Guest\", \"Room\"]);\r\n  const [rows, setRows] = useState([1, 2, 3, 4, 5]);\r\n  const [state, setstate] = useState(localCheckout);\r\n\r\n  const handleValueChange = (rowIndex, title, e) => {\r\n    e.persist();\r\n    localCheckout[rowIndex][title] = e.target.value;\r\n    localStorage.setItem(\"localCheckout\", JSON.stringify(localCheckout));\r\n    setstate(() => {\r\n      let newState = [...localCheckout];\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  const handleAddLine = () => {\r\n    localCheckout.push({ Guest: \"\", Room: \"\", \"Check-In\": null, \"Check-Out\": null, Pers: \"\", Debt: \"\", Source: \"\" });\r\n    localStorage.setItem(\"localCheckout\", JSON.stringify(localCheckout));\r\n    setstate(() => {\r\n      let newState = [...localCheckout];\r\n      return newState;\r\n    });\r\n    const newRow = [...rows, rows.pop() + 1];\r\n    setRows(newRow);\r\n  };\r\n\r\n  const handleRemoveLine = () => {\r\n    if (localCheckout.length > 5) {\r\n      localCheckout.pop();\r\n      localStorage.setItem(\"localCheckout\", JSON.stringify(localCheckout));\r\n      setstate(() => {\r\n        let newState = [...localCheckout];\r\n        return newState;\r\n      });\r\n      rows.pop();\r\n      const newRow = [...rows];\r\n      setRows(newRow);\r\n    }\r\n  };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <h2>Check-outs</h2>\r\n      <Table className={classes.table} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            {titles.map(t => {\r\n              return (\r\n                <TableCell key={t}>\r\n                  <h3>{t}</h3>\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {localCheckout &&\r\n            localCheckout.map((row, rowIndex) => (\r\n              <TableRow key={rowIndex}>\r\n                {titles.map((title, index) => {\r\n                  return (\r\n                    <TableCell key={title} id={rows[rowIndex]} className={classes.root}>\r\n                      <TextField\r\n                        className={classes.even}\r\n                        key={title}\r\n                        rownumber={rows[rowIndex]}\r\n                        variant='outlined'\r\n                        value={state[rowIndex][title]}\r\n                        onChange={e => {\r\n                          handleValueChange(rowIndex, title, e);\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.buttonContainer}>\r\n        <Button className={classes.buttonLeft} variant='contained' color='primary' onClick={handleAddLine}>\r\n          Add Line\r\n        </Button>\r\n        <Button className={classes.buttonRight} variant='contained' color='secondary' onClick={handleRemoveLine}>\r\n          Remove Line\r\n        </Button>\r\n      </div>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default CheckOut;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CheckIn from \"./Check-in/CheckIn\";\r\nimport Products from \"./Products/Products\";\r\nimport CheckOut from \"./Check-out/CheckOut\";\r\n\r\nconst SecondPage = ({ localCheckin, localProducts, localCheckout }) => {\r\n  return (\r\n    <div>\r\n      <NavLink to='/'>\r\n        <Button variant='contained' color='primary'>\r\n          First Page\r\n        </Button>\r\n      </NavLink>\r\n      <CheckIn localCheckin={localCheckin} />\r\n\r\n      <Products localProducts={localProducts} />\r\n\r\n      <CheckOut localCheckout={localCheckout} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SecondPage;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useStyles from \"./ShiftStyle\";\r\nimport { useState } from \"react\";\r\n\r\nconst Shift = props => {\r\n  const classes = useStyles();\r\n  const [shift] = useState([\"From\", \"Current\", \"To\"]);\r\n\r\n  const handleBlur = e => {\r\n    localStorage.setItem(shift[e.target.name], e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete='off'>\r\n      {shift.map((s, index) => {\r\n        return (\r\n          <TextField\r\n            key={s}\r\n            label={s}\r\n            name={index.toString()}\r\n            onBlur={handleBlur}\r\n            defaultValue={localStorage.getItem(s)}\r\n          />\r\n        );\r\n      })}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Shift;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Cashflow from \"./components/Cashflow/Cashflow\";\nimport { Button } from \"@material-ui/core\";\nimport { NavLink, Route, HashRouter } from \"react-router-dom\";\nimport SecondPage from \"./components/SecondPage/SecondPage\";\nimport Shift from \"./components/Shift/Shift\";\n\nfunction App() {\n  let localValues = JSON.parse(localStorage.getItem(\"local\"));\n  let localCheckin = JSON.parse(localStorage.getItem(\"localCheckin\"));\n  let localProducts = JSON.parse(localStorage.getItem(\"localProducts\"));\n  let localCheckout = JSON.parse(localStorage.getItem(\"localCheckout\"));\n\n  const rows = [1, 2, 3, 4, 5];\n  const initValues = rows.map(row => {\n    return { Income: \"\", Expense: \"\", Type: \"\", Comment: \"\" };\n  });\n\n  const initCheckinValues = rows.map(row => {\n    return { Guest: \"\", Room: \"\", \"Check-In\": null, \"Check-Out\": null, Pers: \"\", Debt: \"\", Source: \"\" };\n  });\n\n  const initProductValues = rows.map(row => {\n    return { Type: \"\", Room: \"\", Guest: \"\", Price: \"\", Comments: \"\" };\n  });\n\n  const initCheckoutValues = rows.map(row => {\n    return { Guest: \"\", Room: \"\" };\n  });\n\n  if (localValues === null) {\n    localStorage.setItem(\"local\", JSON.stringify(initValues));\n    localStorage.setItem(\"localCheckin\", JSON.stringify(initCheckinValues));\n    localStorage.setItem(\"localProducts\", JSON.stringify(initProductValues));\n    localStorage.setItem(\"localCheckout\", JSON.stringify(initCheckoutValues));\n  }\n\n  return (\n    <HashRouter>\n      <Route\n        exact\n        path='/'\n        render={() => (\n          <div className='App'>\n            <NavLink to='/secondPage'>\n              <Button variant='contained' color='primary'>\n                Second page\n              </Button>\n            </NavLink>\n            <h2>Hotel Cashflow Management System</h2>\n            <Shift />\n            <Cashflow localValues={localValues !== null ? localValues : initValues} initValues={initValues} />\n          </div>\n        )}\n      />\n\n      <Route\n        path='/secondPage'\n        render={() => (\n          <div className='App'>\n            <SecondPage\n              localCheckin={localCheckin !== null ? localCheckin : initCheckinValues}\n              localProducts={localProducts !== null ? localProducts : initProductValues}\n              localCheckout={localCheckout !== null ? localCheckout : initCheckoutValues}\n            />\n          </div>\n        )}\n      />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"totals\":\"Totals_totals__24YvK\"};"],"sourceRoot":""}